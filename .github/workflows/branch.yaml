name: FastAPI CI CD

on:
  # Trigger the workflow on push or pull request,
  push:
    branches:
      - feature/divyatanwar/aws-lambda-function-deploy
    paths-ignore:
      - 'README.md'
env:
    AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

permissions:
    id-token: write # Needed to use the GITHUB_TOKEN to authenticate with the AWS STS API
    contents: read # Needed to read the contents of the repository
  
jobs:

  CI:
    # Define the type of runner that the job will run on
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it's content
      - name: Checkout code
        uses: actions/checkout@v2
      # Step-1 Setup Python
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.12.9'
      # Step-2 Install Python Virtual Environment
      - name: Install Python Virtual Environment
        run: pip3 install virtualenv
      # Step-3 Setup Virtual Environment
      # https://docs.github.com/en/actions/guides/caching-dependencies-to-speed-up-workflows
      - name: Virtual Environment
        uses: actions/cache@v3
        id: cache-venv
        with:
          path: sample-fastapi/.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('sample-fastapi/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-
      # Step-4 Build a virtual environment and if it doesn't exist, create it
      - name: Activate Virtual Environment and Install Packages
        working-directory: sample-fastapi
        run: |
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
      # Step-5 Run Tests
      - name: Run Tests
        working-directory: sample-fastapi
        run: |
          source .venv/bin/activate
          pytest
      # Step-6 Create archive of dependencies
      - name: Create Archives of Dependencies
        run: |
          cd sample-fastapi
          cd .venv/lib/python3.12/site-packages
          zip -r9 ../../../../sample_fastapi.zip .
      # Step-7 Add API files to Zip file
      - name: Add API files to Zip file
        run: |
          cd sample-fastapi && zip -g ../sample_fastapi.zip -r .
      # Step-8 Upload Zip file
      - name: Upload Zip file
        uses: actions/upload-artifact@v4
        with:
          name: sample_fastapi
          path: sample-fastapi/sample_fastapi.zip

  CD:
    runs-on: ubuntu-latest
    needs: CI
    steps:
      - name: Install AWS CLI
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          role-session-name: GitHubActionsLambdaDeployment
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: sample_fastapi
      - name: Upload artifact to S3
        run: aws s3 cp sample_fastapi.zip s3://saayam-virginia-public/sample_fastapi.zip
      - name: Deploy Lambda function
        run: aws lambda update-function-code --function-name sample_fastapi --s3-bucket saayam-virginia-public --s3-key sample_fastapi.zip
      


 


